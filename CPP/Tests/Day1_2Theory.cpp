//подключение директив препроцессора, которые занимается преобразованием текста до компиляции
#include <stdio.h> //functions of input/output(библиотки)
#include <conio.h> //в ней _getch();//Для задержки экрана
#include <locale.h>//поддержка вывода на других языках //ф-ция setLocale(LC_ALL, "RUS");
//#include <math.h>//в <> библиотеки стандартные-ищет сначала в стандартных, а потом в своих ""-свои файлы-ищет в своих файлах, а потом в стандартных
//#include "c:\lab1\person\Rerson.h"
//#define ZERO 0.0 //замена в коде ZERO на 0.0
//#define NULL 0 -по умолчанию

//соотношение функций в библиотеках и написанные нами происходит после компиляции

void main(void)
{
	//void -пустой
	void a -нельзя; // void *a; -можно
	//signed/unsigned - знаковый/беззнаковый
	//% -символ преобразования, из других мест придет переменная
	int x; //%d 4байт/8байт-зависит от оперативной
	short int y; //%hd - 2байт
	short int x = 4567892;//запишется то что будет в 2-ух из 4-ех которые в области констант
	long int z; //%ld - 8байт
	//знаковый
	float f; //%f   54123 = 0.54123*10^4 -0.54123-мантисса 4-порядок
	double d; //%lf
	double d = .42;
	//знаковый/беззнаковый
	char ch; //%c -1байт
			//'bd' -как под int -4/8байт
	sizeof(3.345F);//4б
	sizeof(0x7B);//16-ричн. только целые числа -все целые как под int выделяется память 


	char str[100] = "Hello!!!"; //%s -100байт
	//char* -строковая переменная
	//const char*

	bool b; //0 == true / 1 == false -числовой, можно вычислять

	//setlocale(LC_ALL,"Russian"); //для русского текста

	printf("\tP\no\n\tp\no\n\tv\ni\n\tc\nh\t\n\n"); //Обязательно должна быть "управляющая строка"
		//в "..." или const char* -управляющая строка-указывает компилятору вид выводимой инфы
	
	_getch(); //задержка перед закрытием окна выпонения or System("pause");
}

/*
%[флаг][размер поля .точность][F|N|h|l|L]-размер modif_type-спецификация
	(N- ближний указатель, F- дальний указатель, h- короткое целое, l- длинное целое, L - long double)
% -спецификация преобразования
флаг - -/+

int main(void) 
{
	_getch();
	return 0; //выход из метода
}

управляющие символы:
\n перевод на новую строчку
\t -табуляция
\a -звуковой сигнал
\b-сдвиг рурсора влево
\r-сдвиг в начало строки
\' \" \\ \? %% -%

переменные
[класс памяти][const]TypeID name [=инициализация];

код понятен процессору после работы транслятора, в состав которого входит или:
	компилятор -за один процесс транслирует код в машинный код
	или
	интерпретатор -выполняет написанный код оператор за оператором, переводя все последовательно в машинный код 
*/

//Исключение: справа налево -унарные операции,операции присваивания и тернарная условная перация(?:)