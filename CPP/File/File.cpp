#include <stdio.h>
#include <time.h>
#include <conio.h>
#include <stdlib.h>

void main(void) {

	FILE *p; //FILE в stdio.h //p -указатель как курсор
	//p = fopen("text.txt", "wt"); //инициализация. Если что-то не так - вернет 0
	//	//первый параметр - имя файла - name.txt(можно задать любое расширение).
	//	//Если без пути - файл где .cpp, .h или полный путь
	//	//второй параметр - для чего открывается файл и какого типа файл. EOF -> -1 End of file - когда файл заканчивается, то встречается этот знак
	//		//t - текстовый, если не указывать, то по умолчанию t
	//		//w - открыть файл для записи. Если этого файла не сущ. программа созд., если такой файл есть - перезаписывает новым пустым
	//		//r - открыть для чтения. Он должен существовать
	//		//a - для записи в конец файла
	//		//w+ - чтение и запись
	//		//r+ - чтение и запись - самый безопасный потому что не перезаписывает
	//		//a+ - прочитать и добавить только в конец
	////винарный файл предст в 16-ричн системе счисления
	//if(!p) {
	//	puts("Erroe");
	//	exit(1);
	//}

	int n, x, i;
	char str[6];

	//printf("...");
	//scanf("%d", &n);
	//for(i = 1; i <= n; ++i) {
	//	printf("x = ");
	//	scanf("%d", &x);
	//	fprintf(p, "%d ", x);
	//}
	//fclose(p);

	p = fopen("text.txt", "rt");

	//while(!feof(p)) {
	//	if(fscanf(p, "%d", &x) == 1) //-1 если конец файла
	//		printf("%d", x);
	//	else {
	//		puts("\nError");
	//		system("pause");
	//		return;
	//	}
	//}
	//fclose(p);

	fseek(p, 0 * sizeof(char), SEEK_END); //передвинули в конец файла
	n = ftell(p);
	for(int j = 3; j <= n; j += 4) {
		fseek(p, (-j) * sizeof(char), SEEK_END);
		fscanf(p, "%d", &x);
		printf("%d\n", x);
	}

	//fseek(p, 3, SEEK_SET); //второй пар. - номер позиции, третий - откуда (сначала в начало и потом на 3-ю позицию)
	//SEEK_SET или 0 - двигаться с начала файла
	//SEEK_CUR - с текущей позиции (второй параметр может быть + -вправа / - -влево
	//SEEK_END - с конца (-4 от 1==последнему символу - четвертая с конца позиция)

	//fprintf(p, "...", i, j); //для записи в файл //вместо p - stdout - записать результат
	//fputs(str, p); //str - имя строки
	//fseek(p, 0, SEEK_END);
	//ftell(p); //возвращает номер позиции на котором нах. указатель

	//в конце закрыть файл
	n = fclose(p); // = кол-во символов файла//если не закрыли - файл закроет компилятор, но не рекомендуется нагружать компилятор

	_getch();
	return;
}